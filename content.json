{"meta":{"title":"HankXie的博客","subtitle":"","description":"","author":"Xiehan","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"windows下使用nvm 自由切换node版本","slug":"windows下使用nvm 自由切换node版本","date":"2020-04-15T13:03:43.551Z","updated":"2020-04-16T07:43:46.952Z","comments":false,"path":"2020/04/15/windows下使用nvm 自由切换node版本/","link":"","permalink":"http://yoursite.com/2020/04/15/windows%E4%B8%8B%E4%BD%BF%E7%94%A8nvm%20%E8%87%AA%E7%94%B1%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/","excerpt":"","text":"在接触nvm前查看了很多资料，但是总有些一些地方迷迷糊糊的，但幸好磕磕碰碰最后也算安装成功了。在此文中，会特意指明一些坑，防止再次踩坑。第一个坑就是，如果你已经单独安装了node，建议先卸载，再来看本文。 1. nvm 下载 nvm 的下载地址：https://github.com/coreybutler/nvm-windows/releases 。选择第一个 nvm-noinstall.zip ，然后解压在系统盘（一般开发相关的文件我都放C盘，但是放别的盘也是可以的）。我放的目录路径是C:\\dev\\nvm。解压出来的文件有： elevate.cmd elevate.vbs install.cmd LICENSE nvm.exe 2. nvm 安装 双击 install.cmd ，是以控制台形式显示的，第一下直接按回车，然后会在C盘根目录产生settings.txt，把这个文件放进刚刚解压的那个目录，然后修改settings.txt内容，改成下面那样： 123456root: C:\\dev\\nvmpath: C:\\dev\\nodejs arch: 64proxy: none node_mirror: http:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node&#x2F;npm_mirror: https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;npm&#x2F; 但是有些人很不幸，这个方法行不通，因为打开 install.cmd按下回车后，显示拒绝访问注册表路径，并弹出一个settings.txt。这时候，你只要淡定地叉掉那个文本以及控制台，然后在刚刚的目录里新建一个文件settings.txt，最后把上面的内容复制进去就可以了。 root ： nvm的存放地址 path ： 存放指向node版本的快捷方式，使用nvm的过程中会自动生成。一般写的时候与nvm同级。 arch ： 电脑系统是64位就写64,32位就写32 proxy ： 代理 3. nvm 配置 以控制台方法执行成功的，在环境变量里会自动配置了 NVM_HOME 和 NVM_SYMLINK ，这时候只要修改相应的路径就行了。 直接创建settings文件的可以在环境变量里创建 NVM_HOME 和 NVM_SYMLINK，并添加路径要是嫌弃可视化界面打开环境变量的步骤太麻烦，可以直接使用 ** windows+r =&gt; sysdm.cpl ** 12NVM_HOME： C:\\dev\\nvmNVM_SYMLINK ： C:\\dev\\nodejs 在PATH里加上;%NVM_HOME%;%NVM_SYMLINK%;。一键控制台install的还要检查 环境变量 PATH 上的路径有没有添加C:\\dev\\nvm以及C:\\dev\\nodejs,有的话就删掉。 4. 检测安装结果 打开控制台，输入：nvm -v,若是出现版本信息，则安装。若报错，那就重新把步骤再捋一遍。 检查环境变量是否配置成功：可以在控制台输入：set [环境变量名]，查看路径是否填写错误 5. 使用node 控制台下载 =&gt; 输入：nvm install [版本号]，下载最新版的可以直接输nvm install latest 下载完成后，在控制台输入：nvm use [版本号]。即使用这个版本号的node了。在use后，上面所说的nodejs文件夹就自动生成了。（在use之前是没有的哦）6. 使用效果标*代表当前版本","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"}],"keywords":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"}]},{"title":"前端测试","slug":"前端-test","date":"2020-04-15T13:02:36.747Z","updated":"2020-04-15T13:04:24.070Z","comments":false,"path":"2020/04/15/前端-test/","link":"","permalink":"http://yoursite.com/2020/04/15/%E5%89%8D%E7%AB%AF-test/","excerpt":"","text":"","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"SpringBoot中Mybatis打印sql","slug":"SpringBoot中Mybatis打印sql","date":"2020-04-15T11:56:44.409Z","updated":"2020-04-16T07:08:59.555Z","comments":false,"path":"2020/04/15/SpringBoot中Mybatis打印sql/","link":"","permalink":"http://yoursite.com/2020/04/15/SpringBoot%E4%B8%ADMybatis%E6%89%93%E5%8D%B0sql/","excerpt":"","text":"如果使用的是application.properties文件，加入如下配置： 1logging.level.com.example.demo.dao&#x3D;debug logging.level.com，后面的路径指的是mybatis对应的方法接口所在的包。并不是mapper.xml所在的包。 如果使用的是application.yml文件，加入如下配置： 1234# 打印sqllogging: level: com.example.demo.dao : debug","categories":[{"name":"后端","slug":"后端","permalink":"http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"后端","slug":"后端","permalink":"http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-04-15T10:44:26.183Z","updated":"2020-04-15T10:44:26.183Z","comments":true,"path":"2020/04/15/hello-world/","link":"","permalink":"http://yoursite.com/2020/04/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}